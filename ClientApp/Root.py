# automatically generated by the FlatBuffers compiler, do not modify

# namespace: ClientApp

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class Root(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = Root()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsRoot(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # Root
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # Root
    def ClientType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # Root
    def Client(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

def RootStart(builder):
    builder.StartObject(2)

def Start(builder):
    RootStart(builder)

def RootAddClientType(builder, clientType):
    builder.PrependUint8Slot(0, clientType, 0)

def AddClientType(builder, clientType):
    RootAddClientType(builder, clientType)

def RootAddClient(builder, client):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(client), 0)

def AddClient(builder, client):
    RootAddClient(builder, client)

def RootEnd(builder):
    return builder.EndObject()

def End(builder):
    return RootEnd(builder)
